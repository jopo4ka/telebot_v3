const Telegraf = require('telegraf')
const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')
const bot = new Telegraf('432798090:AAHSlICzRW9WqsTz80Jx9YfqEioqA0hWtaA')
//const bot = new Telegraf('463835817:AAEqgS7QrA5ESzMRRVuesEUHmpMuCbeAyBA')
var debug = require('debug')('telebot-v3:bot');
const keyboards = require('./keyboards');
var dbUtils = require('./../database/utils');
var mDbg = true;
var msg;

//Start command is received
bot.start((ctx) => {
	if (mDbg)
		debug('started:', ctx.from.id)

	dbUtils.addUser(ctx.message, req=>{
		if (req){
			var prepMsg = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∫ –Ω–∞–º! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.'
			ctx.reply(prepMsg, Markup
			.keyboard(keyboards.city)
			.oneTime()
			.resize()
			.extra()
			)
			dbUtils.addMyMessage(prepMsg, ctx.from.id);
		}else{
			if(dbUtils.checkMan(ctx.from.id)){
				debug("NOT MANUAL MODE")
			}else{debug('Manual mode')}
		}
	});
})

// City change menu
bot.hears(['1Ô∏è‚É£ –î–µ—Ñ–æ–ª—Ç', '2Ô∏è‚É£ –ù–£', '3Ô∏è‚É£ –£—Ñ–∞', '4Ô∏è‚É£ –ú–æ—Å–∫–≤–∞' ], ctx => {
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.updCity(ctx.message);
	dbUtils.addMessage(ctx.message);
		var prepMsg = '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –≥–æ—Ä–æ–¥! –í—ã–±–µ—Ä–µ—Ç–µ –≥—Ä—É–ø–ø—É —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.';
		ctx.reply(prepMsg, Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
		)
		dbUtils.addMyMessage(prepMsg, ctx.from.id);
	//}
})

//Back in main menu
bot.hears('üë£ –ù–∞–∑–∞–¥', ctx=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message);
	ctx.reply('–í–µ—Ä–Ω—É–ª–∏—Å—å.', Markup
	.keyboard(keyboards.groups)
	.oneTime()
	.resize()
	.extra()
	)
})

//Price menu
bot.hears('üåö –ì–∞—à–∏–∫ (–Ω–∞—Ç—É—Ä)', (ctx) =>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message);
	ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –≤–µ—Å –∏ —Ü–µ–Ω—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', Markup
	.keyboard(keyboards.gar)
	.oneTime()
	.resize()
	.extra()
	)
})
//Create new order
bot.hears(/^üåö (.+)/, (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addOrder(ctx.message, ctx.match, "–ì–∞—à–∏–∫");
	dbUtils.addMessage(ctx.message, true);
	ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é: \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑\".', Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
	)
});

bot.hears('‚ò¢Ô∏è —Ç–≤ (–≥–∞—à —Ö–∏–º–∫–∞)', (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message);
	ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –≤–µ—Å –∏ —Ü–µ–Ω—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', Markup
	.keyboard(keyboards.tv)
	.oneTime()
	.resize()
	.extra()
	)
})
//Create new order
bot.hears(/^‚ò¢Ô∏è (.+)/, (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addOrder(ctx.message, ctx.match, "—Ç–≤");
	dbUtils.addMessage(ctx.message, true);
	ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é: \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑\".', Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
	)
});

bot.hears('üëÅ –ú–∞—Ä–∫–∏ (–ª–∏–∑–µ—Ä,–ª—Å–¥)', (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message);
	ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ü–µ–Ω—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', Markup
	.keyboard(keyboards.mar)
	.oneTime()
	.resize()
	.extra()
	)
})
//Create new order
bot.hears(/^üëÅ (.+)/, (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addOrder(ctx.message, ctx.match, "–ú–∞—Ä–∫–∏");
	dbUtils.addMessage(ctx.message, true);
	ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é: \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑\".', Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
	)
});

bot.hears('üíé –°–ö (–∫—Ä–∏—Å—Ç–∞–ª–ª—ã,–ª—ë–¥)', (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message);
	ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –≤–µ—Å –∏ —Ü–µ–Ω—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', Markup
	.keyboard(keyboards.sk)
	.oneTime()
	.resize()
	.extra()
	)
})
//Create new order
bot.hears(/^üíé (.+)/, (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addOrder(ctx.message, ctx.match, "–°–ö");
	dbUtils.addMessage(ctx.message, true);
	ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é: \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑\".', Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
	)
});

bot.hears('‚öóÔ∏è –ú–µ—Ñ–µ–¥—Ä–æ–Ω (–∑–∞–≤–æ–¥—Å–∫–æ–π)', (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message);
	ctx.reply('–í—ã–±–µ—Ä–µ—Ç–µ –≤–µ—Å –∏ —Ü–µ–Ω—É –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.', Markup
	.keyboard(keyboards.mef)
	.oneTime()
	.resize()
	.extra()
	)
})
//Create new order
bot.hears(/^‚öóÔ∏è (.+)/, (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addOrder(ctx.message, ctx.match, "–ú–µ—Ñ–µ–¥—Ä–æ–Ω");
	dbUtils.addMessage(ctx.message, true);
	ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞–≤ –ø—É–Ω–∫—Ç –º–µ–Ω—é: \"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑\".', Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
	)
});

bot.hears('üí∞ –†–∞–±–æ—Ç–∞ —É –Ω–∞—Å', (ctx) =>{
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.addMessage(ctx.message, true);
	ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ —Å–µ—Ç–∏, –Ω–∞—à–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è.', Markup
	.keyboard(keyboards.sk)
	.oneTime()
	.resize()
	.extra()
	)
})

//get current orders
bot.hears(/^üóÇ /, (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	var prepareMsg = '';
	dbUtils.getOrders(ctx.message, (res)=>{
		if (mDbg)
			debug("–ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | "+ ctx.message.from.id)

		prepareMsg += "–í–∞—à –∑–∞–∫–∞–∑ \n"
		prepareMsg += '-----------------------------------\n';
		if (mDbg)
			debug("------------------------------------")
		var num = 1;
		for (var ordr in res){
			var temp = res[ordr].payd ? "–û–ø–ª–∞—á–µ–Ω" : "–ù–µ –æ–ø–ª–∞—á–µ–Ω";
			prepareMsg += num+ ' | '+ res[ordr].num+ ' | '+ res[ordr].text + ' | ' + temp +'\n'
			if (mDbg)
				debug(num+ ' | '+ res[ordr].num+ ' | '+ res[ordr].text);
			num++
		}
		ctx.reply(prepMsg, Markup
			.keyboard(keyboards.groups)
			.oneTime()
			.resize()
			.extra()
		);
	});
});
bot.hears('üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑–∞', (ctx)=>{
	global.socket.emit("incoming_msg", ctx.message);
	if (mDbg)
		debug("–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã");
	var prepMsg = "–î–ª—è –æ–ø–ª–∞—Ç—ã –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å QIWI –∫–æ—à–µ–ª—å–∫–∏:\n"+
								"+7-987-123-45-67\n"+
								"+7-987-234-56-78\n"+
								"–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞";
	ctx.reply(prepMsg, Markup
		.keyboard(keyboards.groups)
		.oneTime()
		.resize()
		.extra()
	);
});

//Added another messages in database
bot.on('message', (ctx) => {
	global.msg = ctx.message;
	dbUtils.addMessage(ctx.message, true);
	global.socket.emit("incoming_msg", ctx.message);
	dbUtils.checkMan(ctx.from.id, manMode=>{
	if (!manMode){
		var prepMsg = '–ü—Ä–æ—Å—Ç–∏—Ç–µ, —è –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é.'
		ctx.reply(prepMsg)
		if (mDbg)
			debug('Received message | from: '+ ctx.from.id);
		dbUtils.addMyMessage(prepMsg, ctx.from.id);
	}else{if (mDbg) {debug('Manual mode')}}
	})
})

module.exports.reply = function(id, text){
	bot.telegram.sendMessage(id, text);
}

bot.startPolling()
